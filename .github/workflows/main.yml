name: build
on:
  push

jobs:
  test:
    runs-on: self-hosted
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v3
      - name: Setup Gralde
        uses: gradle/gradle-build-action@v2

      - name: Build database image
        run: docker-compose up -d

      - name: Sleep for 5 seconds
        run: sleep 5s
        shell: bash

      - name: Show db logs
        run: docker logs db
        shell: bash

      - name: Run build with Gradle Wrapper
        run: ./gradlew test
  cleaner:
    runs-on: self-hosted
    needs: test
    if: ${{ always() }}
    steps:
      - name: db stopper
        run: docker stop db
        shell: bash
      - name: db cleaner
        run: docker rm -f -v db
        shell: bash
      - name: redis stopper
        run: docker stop redis
        shell: bash
      - name: redis cleaner
        run: docker rm -f -v redis
        shell: bash

  deploy:
    runs-on: self-hosted
    needs:
      - test
      - cleaner
    if: needs.test.result == 'success'
    steps:
      - name: Set up SSH
        run: |
          mkdir -p ~/temp
          echo -e "${{ secrets.EC2_KEY }}" > ~/temp/id_rsa
          chmod 600 ~/temp/id_rsa

      - name: Copy files to EC2
        run: |
          rsync -avz -e "ssh -i ~/temp/id_rsa" ./ ubuntu@3.66.232.171:~/shop

      - name: closing old screen
        run: |
          ssh -i ~/temp/id_rsa ubuntu@3.66.232.171 "
          screen -ls | grep shop &&
          screen -S shop -X quit || true
          "

      - name: starting new screen
        run: |
          sleep 10 &&
          ssh -i ~/temp/id_rsa ubuntu@3.66.232.171 "cd ~/shop && screen -dmS shop ./gradlew bootRun --args='--spring.profiles.active=prod -PjwtTokenSecret=${{ secrets.JWT_TOKEN_SECRET }} -PawsAccessKeyId=${{ secrets.AWS_ACCESS_KEY_ID }} -PawsSecretAccessKey=${{ secrets.AWS_SECRET_ACCESS_KEY }}'"

