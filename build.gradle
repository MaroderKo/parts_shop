plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.4'
	id 'io.spring.dependency-management' version '1.1.0'
	id "nu.studer.jooq" version "8.1"
	id "org.flywaydb.flyway" version "9.8.1"
}

group = 'com.autosale'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'


repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-jooq'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.flywaydb:flyway-core'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	jooqGenerator 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

flyway {
	url = 'jdbc:postgresql://localhost:5432/parts_shop'
	user = 'postgres'
	password = 'postgres'
	schemas = ['public']
	locations = ['classpath:db/migration']
}

jooq {
	version = '3.17.6'
	edition = nu.studer.gradle.jooq.JooqEdition.OSS

	configurations {
		main {
			generateSchemaSourceOnCompilation = false
			generationTool {
				logging = org.jooq.meta.jaxb.Logging.WARN
				jdbc {
					driver = 'org.postgresql.Driver'
					url = 'jdbc:postgresql://localhost:5432/parts_shop'
					user = 'postgres'
					password = 'postgres'
				}
				generator {
					name = 'org.jooq.codegen.DefaultGenerator'
					database {
						name = 'org.jooq.meta.postgres.PostgresDatabase'
						includes = ".*"
						excludes = "flyway_schema_history"
						inputSchema = 'public'
					}
					generate {
						deprecated = false
						records = true
						immutablePojos = false
						fluentSetters = false
					}
					target {
						packageName = 'structure'
						directory = 'src/main/java/com/autosale/shop/model/database'
					}
					strategy.name = "org.jooq.codegen.DefaultGeneratorStrategy"
				}
			}
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

flywayMigrate.dependsOn classes
test.dependsOn(flywayMigrate)
