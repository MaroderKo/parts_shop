/*
 * This file is generated by jOOQ.
 */
package structure.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;
import structure.tables.Logs;

import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class LogsRecord extends UpdatableRecordImpl<LogsRecord> implements Record2<LocalDateTime, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Create a detached LogsRecord
     */
    public LogsRecord() {
        super(Logs.LOGS);
    }

    /**
     * Create a detached, initialised LogsRecord
     */
    public LogsRecord(LocalDateTime time, String message) {
        super(Logs.LOGS);

        setTime(time);
        setMessage(message);
    }

    /**
     * Getter for <code>public.logs.time</code>.
     */
    public LocalDateTime getTime() {
        return (LocalDateTime) get(0);
    }

    /**
     * Setter for <code>public.logs.time</code>.
     */
    public void setTime(LocalDateTime value) {
        set(0, value);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * Getter for <code>public.logs.message</code>.
     */
    public String getMessage() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * Setter for <code>public.logs.message</code>.
     */
    public void setMessage(String value) {
        set(1, value);
    }

    @Override
    public Record1<LocalDateTime> key() {
        return (Record1) super.key();
    }

    @Override
    public Row2<LocalDateTime, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<LocalDateTime, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<LocalDateTime> field1() {
        return Logs.LOGS.TIME;
    }

    @Override
    public Field<String> field2() {
        return Logs.LOGS.MESSAGE;
    }

    @Override
    public LocalDateTime component1() {
        return getTime();
    }

    @Override
    public String component2() {
        return getMessage();
    }

    @Override
    public LocalDateTime value1() {
        return getTime();
    }

    @Override
    public String value2() {
        return getMessage();
    }

    @Override
    public LogsRecord value1(LocalDateTime value) {
        setTime(value);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    @Override
    public LogsRecord value2(String value) {
        setMessage(value);
        return this;
    }

    @Override
    public LogsRecord values(LocalDateTime value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }
}
