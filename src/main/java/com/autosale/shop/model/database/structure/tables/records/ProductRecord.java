/*
 * This file is generated by jOOQ.
 */
package structure.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;
import structure.tables.Product;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class ProductRecord extends UpdatableRecordImpl<ProductRecord> implements Record7<Integer, String, String, Double, String, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Create a detached ProductRecord
     */
    public ProductRecord() {
        super(Product.PRODUCT);
    }

    /**
     * Create a detached, initialised ProductRecord
     */
    public ProductRecord(Integer id, String name, String description, Double cost, String status, Integer sellerId, Integer buyerId) {
        super(Product.PRODUCT);

        setId(id);
        setName(name);
        setDescription(description);
        setCost(cost);
        setStatus(status);
        setSellerId(sellerId);
        setBuyerId(buyerId);
    }

    /**
     * Getter for <code>public.product.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.product.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.product.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.product.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.product.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.product.description</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.product.cost</code>.
     */
    public Double getCost() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>public.product.cost</code>.
     */
    public void setCost(Double value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.product.status</code>.
     */
    public String getStatus() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.product.status</code>.
     */
    public void setStatus(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.product.seller_id</code>.
     */
    public Integer getSellerId() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>public.product.seller_id</code>.
     */
    public void setSellerId(Integer value) {
        set(5, value);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * Getter for <code>public.product.buyer_id</code>.
     */
    public Integer getBuyerId() {
        return (Integer) get(6);
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * Setter for <code>public.product.buyer_id</code>.
     */
    public void setBuyerId(Integer value) {
        set(6, value);
    }

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    @Override
    public Row7<Integer, String, String, Double, String, Integer, Integer> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, String, String, Double, String, Integer, Integer> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Product.PRODUCT.ID;
    }

    @Override
    public Field<String> field2() {
        return Product.PRODUCT.NAME;
    }

    @Override
    public Field<String> field3() {
        return Product.PRODUCT.DESCRIPTION;
    }

    @Override
    public Field<Double> field4() {
        return Product.PRODUCT.COST;
    }

    @Override
    public Field<String> field5() {
        return Product.PRODUCT.STATUS;
    }

    @Override
    public Field<Integer> field6() {
        return Product.PRODUCT.SELLER_ID;
    }

    @Override
    public Field<Integer> field7() {
        return Product.PRODUCT.BUYER_ID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getDescription();
    }

    @Override
    public Double component4() {
        return getCost();
    }

    @Override
    public String component5() {
        return getStatus();
    }

    @Override
    public Integer component6() {
        return getSellerId();
    }

    @Override
    public Integer component7() {
        return getBuyerId();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getDescription();
    }

    @Override
    public Double value4() {
        return getCost();
    }

    @Override
    public String value5() {
        return getStatus();
    }

    @Override
    public Integer value6() {
        return getSellerId();
    }

    @Override
    public Integer value7() {
        return getBuyerId();
    }

    @Override
    public ProductRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ProductRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public ProductRecord value3(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public ProductRecord value4(Double value) {
        setCost(value);
        return this;
    }

    @Override
    public ProductRecord value5(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public ProductRecord value6(Integer value) {
        setSellerId(value);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    @Override
    public ProductRecord value7(Integer value) {
        setBuyerId(value);
        return this;
    }

    @Override
    public ProductRecord values(Integer value1, String value2, String value3, Double value4, String value5, Integer value6, Integer value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }
}
